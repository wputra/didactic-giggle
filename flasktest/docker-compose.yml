version: "3.3"
services:
  web:
    image: "wputra/flasktest:latest"
    ports:
      - "5000:5000"
    restart: always
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_USER: flask
      DB_PASSWORD: fl45k
      DB_NAME: urls
      FLASK_APP: main.py
      FLASK_RUN_HOST: 0.0.0.0
      FLASK_APP_HOST: http://192.168.77.10:5000/
  redis:
    image: "redis:alpine"
    restart: always
    ports:
      - "6379:6379"
  redis_read:
    image: "redis:alpine"
    command: redis-server --slaveof redis 6379
    restart: always
  db:
    image: mysql:5.7
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: r00t
      MYSQL_DATABASE: urls
      MYSQL_USER: flask
      MYSQL_PASSWORD: fl45k
  zoo:
    image: zookeeper:3.4.9
    hostname: zoo
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo:2888:3888
    volumes:
      - zoo_data:/data
      - zoo_log:/datalog
  kafka:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    depends_on:
      - zoo


volumes:
  db_data: {}
  zoo_data: {}
  zoo_log: {}
  kafka_data: {}
